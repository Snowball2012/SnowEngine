<?xml version="1.0" standalone="yes"?>
<NewDataSet>
  <xs:schema id="NewDataSet" xmlns="" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xs:element name="NewDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true">
      <xs:complexType>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
          <xs:element name="SuppressVersion">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="CurrentVersion" type="xs:int" minOccurs="0" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
          <xs:element name="snow_engine">
            <xs:complexType>
              <xs:sequence>
                <xs:element name="FileName" type="xs:string" default="" />
                <xs:element name="ErrorCode" type="xs:string" default="" />
                <xs:element name="Message" type="xs:string" default="" />
                <xs:element name="CodePrev" type="xs:unsignedInt" default="0" />
                <xs:element name="CodeCurrent" type="xs:unsignedInt" default="0" />
                <xs:element name="CodeNext" type="xs:unsignedInt" default="0" />
              </xs:sequence>
            </xs:complexType>
          </xs:element>
        </xs:choice>
      </xs:complexType>
      <xs:unique name="Constraint1" msdata:PrimaryKey="true">
        <xs:selector xpath=".//snow_engine" />
        <xs:field xpath="FileName" />
        <xs:field xpath="ErrorCode" />
        <xs:field xpath="Message" />
        <xs:field xpath="CodePrev" />
        <xs:field xpath="CodeCurrent" />
        <xs:field xpath="CodeNext" />
      </xs:unique>
    </xs:element>
  </xs:schema>
  <SuppressVersion>
    <CurrentVersion>2</CurrentVersion>
  </SuppressVersion>
  <snow_engine>
    <FileName>SceneItems.h</FileName>
    <ErrorCode>V730</ErrorCode>
    <Message>Not all members of a class are initialized inside the compiler generated constructor. Consider inspecting: m_data.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>1171984</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>RenderData.h</FileName>
    <ErrorCode>V730</ErrorCode>
    <Message>Not all members of a class are initialized inside the compiler generated constructor. Consider inspecting: vbv, ibv, mat_cb, mat_table, tf_addr.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>3129279</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>Renderer.cpp</FileName>
    <ErrorCode>V730</ErrorCode>
    <Message>Not all members of a class are initialized inside the constructor. Consider inspecting: m_screen_viewport, m_scissor_rect, m_prev_frame_texture, m_jittered_frame_texture.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>3180372678</CodeCurrent>
    <CodeNext>3611432588</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>RenderData.h</FileName>
    <ErrorCode>V730</ErrorCode>
    <Message>Not all members of a class are initialized inside the compiler generated constructor. Consider inspecting: lights.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>25003531</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>Renderer.cpp</FileName>
    <ErrorCode>V730</ErrorCode>
    <Message>Not all members of a class are initialized inside the constructor. Consider inspecting: m_screen_viewport, m_scissor_rect.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>3180372678</CodeCurrent>
    <CodeNext>3611432588</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>TextureStreamer.h</FileName>
    <ErrorCode>V730</ErrorCode>
    <Message>Not all members of a class are initialized inside the compiler generated constructor. Consider inspecting: packed_mip_info, tile_shape_for_nonpacked_mips.</Message>
    <CodePrev>193</CodePrev>
    <CodeCurrent>195567</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>TextureStreamer.h</FileName>
    <ErrorCode>V730</ErrorCode>
    <Message>Not all members of a class are initialized inside the compiler generated constructor. Consider inspecting: data.</Message>
    <CodePrev>2571550782</CodePrev>
    <CodeCurrent>400001711</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>TextureStreamer.h</FileName>
    <ErrorCode>V730</ErrorCode>
    <Message>Not all members of a class are initialized inside the compiler generated constructor. Consider inspecting: tiling.</Message>
    <CodePrev>4249728367</CodePrev>
    <CodeCurrent>6258301</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>TemporalAA.h</FileName>
    <ErrorCode>V802</ErrorCode>
    <Message>On _-bit platform, structure size can be reduced from _ to _ bytes by rearranging the fields according to their sizes in decreasing order.</Message>
    <CodePrev>1174331</CodePrev>
    <CodeCurrent>123</CodeCurrent>
    <CodeNext>5816</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>RenderUtils.h</FileName>
    <ErrorCode>V108</ErrorCode>
    <Message>Incorrect index type: mMappedData[not a memsize-type]. Use memsize type instead.</Message>
    <CodePrev>123</CodePrev>
    <CodeCurrent>1696601864</CodeCurrent>
    <CodeNext>125</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>packed_freelist.hpp</FileName>
    <ErrorCode>V108</ErrorCode>
    <Message>Incorrect index type: m_freelist[not a memsize-type]. Use memsize type instead.</Message>
    <CodePrev>443688171</CodePrev>
    <CodeCurrent>689630914</CodeCurrent>
    <CodeNext>539</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>packed_freelist.hpp</FileName>
    <ErrorCode>V108</ErrorCode>
    <Message>Incorrect index type: m_freelist[not a memsize-type]. Use memsize type instead.</Message>
    <CodePrev>123</CodePrev>
    <CodeCurrent>3415503159</CodeCurrent>
    <CodeNext>666279342</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>packed_freelist.hpp</FileName>
    <ErrorCode>V108</ErrorCode>
    <Message>Incorrect index type: m_freelist[not a memsize-type]. Use memsize type instead.</Message>
    <CodePrev>2905267</CodePrev>
    <CodeCurrent>966727977</CodeCurrent>
    <CodeNext>707983</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>packed_freelist.hpp</FileName>
    <ErrorCode>V108</ErrorCode>
    <Message>Incorrect index type: m_freelist[not a memsize-type]. Use memsize type instead.</Message>
    <CodePrev>79997277</CodePrev>
    <CodeCurrent>1171200297</CodeCurrent>
    <CodeNext>125</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>packed_freelist.hpp</FileName>
    <ErrorCode>V108</ErrorCode>
    <Message>Incorrect index type: m_freelist[not a memsize-type]. Use memsize type instead.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>193445975</CodeCurrent>
    <CodeNext>1311825697</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>packed_freelist.hpp</FileName>
    <ErrorCode>V108</ErrorCode>
    <Message>Incorrect index type: m_freelist[not a memsize-type]. Use memsize type instead.</Message>
    <CodePrev>123</CodePrev>
    <CodeCurrent>2288743567</CodeCurrent>
    <CodeNext>1359814433</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>packed_freelist.hpp</FileName>
    <ErrorCode>V108</ErrorCode>
    <Message>Incorrect index type: m_freelist[not a memsize-type]. Use memsize type instead.</Message>
    <CodePrev>2288743567</CodePrev>
    <CodeCurrent>1359814433</CodeCurrent>
    <CodeNext>125</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>SceneImporter.cpp</FileName>
    <ErrorCode>V205</ErrorCode>
    <Message>Explicit conversion of pointer type to _-bit integer type.</Message>
    <CodePrev>1851177849</CodePrev>
    <CodeCurrent>2621088709</CodeCurrent>
    <CodeNext>3514392220</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>SceneImporter.cpp</FileName>
    <ErrorCode>V204</ErrorCode>
    <Message>Explicit conversion from _-bit integer type to pointer type: (void *) i</Message>
    <CodePrev>2220018115</CodePrev>
    <CodeCurrent>2872391022</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>SceneImporter.cpp</FileName>
    <ErrorCode>V204</ErrorCode>
    <Message>Explicit conversion from _-bit integer type to pointer type: (void *) i</Message>
    <CodePrev>2689456619</CodePrev>
    <CodeCurrent>3946132545</CodeCurrent>
    <CodeNext>0</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>SceneImporter.cpp</FileName>
    <ErrorCode>V205</ErrorCode>
    <Message>Explicit conversion of pointer type to _-bit integer type.</Message>
    <CodePrev>47908483</CodePrev>
    <CodeCurrent>2217389906</CodeCurrent>
    <CodeNext>125</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>SceneImporter.cpp</FileName>
    <ErrorCode>V205</ErrorCode>
    <Message>Explicit conversion of pointer type to _-bit integer type.</Message>
    <CodePrev>429387980</CodePrev>
    <CodeCurrent>3300623174</CodeCurrent>
    <CodeNext>1023892402</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>SceneImporter.cpp</FileName>
    <ErrorCode>V205</ErrorCode>
    <Message>Explicit conversion of pointer type to _-bit integer type.</Message>
    <CodePrev>3300623174</CodePrev>
    <CodeCurrent>1023892402</CodeCurrent>
    <CodeNext>91773</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>SceneImporter.cpp</FileName>
    <ErrorCode>V205</ErrorCode>
    <Message>Explicit conversion of pointer type to _-bit integer type.</Message>
    <CodePrev>1924871130</CodePrev>
    <CodeCurrent>3623386623</CodeCurrent>
    <CodeNext>0</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>UVScreenDensityCalculator.cpp</FileName>
    <ErrorCode>V2002</ErrorCode>
    <Message>Consider using the 'Ptr' version of the XMVectorGetX function here: XMVectorGetXPtr.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>1090540552</CodeCurrent>
    <CodeNext>3551549481</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>UVScreenDensityCalculator.cpp</FileName>
    <ErrorCode>V2002</ErrorCode>
    <Message>Consider using the 'Ptr' version of the XMVectorGetX function here: XMVectorGetXPtr.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>2164282420</CodeCurrent>
    <CodeNext>0</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>XMMath.cpp</FileName>
    <ErrorCode>V2002</ErrorCode>
    <Message>Consider using the 'Ptr' version of the XMVectorSetByIndex function here: XMVectorSetByIndexPtr.</Message>
    <CodePrev>2475312304</CodePrev>
    <CodeCurrent>1175234279</CodeCurrent>
    <CodeNext>1750272523</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>XMMath.cpp</FileName>
    <ErrorCode>V2002</ErrorCode>
    <Message>Consider using the 'Ptr' version of the XMVectorGetX function here: XMVectorGetXPtr.</Message>
    <CodePrev>1750272523</CodePrev>
    <CodeCurrent>58069545</CodeCurrent>
    <CodeNext>0</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>DescriptorTableBakery.cpp</FileName>
    <ErrorCode>V104</ErrorCode>
    <Message>Implicit type conversion to memsize type in an arithmetic expression.</Message>
    <CodePrev>123</CodePrev>
    <CodeCurrent>2724360198</CodeCurrent>
    <CodeNext>1287255529</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>DescriptorTableBakery.cpp</FileName>
    <ErrorCode>V104</ErrorCode>
    <Message>Implicit conversion of 'new_heap_desc.NumDescriptors' to memsize type in an arithmetic expression.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>3263523261</CodeCurrent>
    <CodeNext>1256117226</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>ForwardCBProvider.cpp</FileName>
    <ErrorCode>V104</ErrorCode>
    <Message>Implicit conversion of 'BufferGPUSize * m_nbuffers' to memsize type in an arithmetic expression.</Message>
    <CodePrev>1059940225</CodePrev>
    <CodeCurrent>3279144385</CodeCurrent>
    <CodeNext>125</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>ForwardCBProvider.cpp</FileName>
    <ErrorCode>V106</ErrorCode>
    <Message>Implicit type conversion third argument 'BufferGPUSize' of function 'memcpy' to memsize type.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>500472198</CodeCurrent>
    <CodeNext>125</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>ForwardCBProvider.cpp</FileName>
    <ErrorCode>V101</ErrorCode>
    <Message>Implicit assignment type conversion to memsize type.</Message>
    <CodePrev>86650063</CodePrev>
    <CodeCurrent>536350999</CodeCurrent>
    <CodeNext>1070956545</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>ForwardCBProvider.cpp</FileName>
    <ErrorCode>V101</ErrorCode>
    <Message>Implicit assignment type conversion to memsize type.</Message>
    <CodePrev>536350999</CodePrev>
    <CodeCurrent>1070956545</CodeCurrent>
    <CodeNext>0</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>DescriptorHeap.cpp</FileName>
    <ErrorCode>V101</ErrorCode>
    <Message>Implicit assignment type conversion to memsize type.</Message>
    <CodePrev>672809099</CodePrev>
    <CodeCurrent>1163670628</CodeCurrent>
    <CodeNext>1229295442</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>DescriptorHeap.cpp</FileName>
    <ErrorCode>V104</ErrorCode>
    <Message>Implicit conversion of 'm_free_segment_start' to memsize type in an arithmetic expression: m_free_segment_start &lt; m_desc_total</Message>
    <CodePrev>125</CodePrev>
    <CodeCurrent>3487296294</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>ForwardLightingPass.cpp</FileName>
    <ErrorCode>V112</ErrorCode>
    <Message>Dangerous magic number _ used: ...BufferView( _, context.pa...</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>1078779939</CodeCurrent>
    <CodeNext>0</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>D3DApp.cpp</FileName>
    <ErrorCode>V2001</ErrorCode>
    <Message>Consider using the extended version of the Sleep function here: SleepEx.</Message>
    <CodePrev>123</CodePrev>
    <CodeCurrent>121017</CodeCurrent>
    <CodeNext>125</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>D3DApp.cpp</FileName>
    <ErrorCode>V2001</ErrorCode>
    <Message>Consider using the extended version of the RegisterClass function here: RegisterClassEx.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>349148527</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>D3DApp.cpp</FileName>
    <ErrorCode>V2001</ErrorCode>
    <Message>Consider using the extended version of the MessageBox function here: MessageBoxEx.</Message>
    <CodePrev>123</CodePrev>
    <CodeCurrent>2543586374</CodeCurrent>
    <CodeNext>176909</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>D3DApp.cpp</FileName>
    <ErrorCode>V2001</ErrorCode>
    <Message>Consider using the extended version of the AdjustWindowRect function here: AdjustWindowRectEx.</Message>
    <CodePrev>900316077</CodePrev>
    <CodeCurrent>422756893</CodeCurrent>
    <CodeNext>614634339</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>D3DApp.cpp</FileName>
    <ErrorCode>V2001</ErrorCode>
    <Message>Consider using the extended version of the MessageBox function here: MessageBoxEx.</Message>
    <CodePrev>123</CodePrev>
    <CodeCurrent>4254250894</CodeCurrent>
    <CodeNext>176909</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>DescriptorTableBakery.cpp</FileName>
    <ErrorCode>V104</ErrorCode>
    <Message>Implicit conversion of 'cur_gpu_heap-&gt;GetDesc().NumDescriptors' to memsize type in an arithmetic expression.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>3447323930</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>DescriptorTableBakery.cpp</FileName>
    <ErrorCode>V104</ErrorCode>
    <Message>Implicit type conversion to memsize type in an arithmetic expression.</Message>
    <CodePrev>1445915914</CodePrev>
    <CodeCurrent>3321229325</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>DescriptorTableBakery.cpp</FileName>
    <ErrorCode>V104</ErrorCode>
    <Message>Implicit type conversion to memsize type in an arithmetic expression.</Message>
    <CodePrev>1465986314</CodePrev>
    <CodeCurrent>794452019</CodeCurrent>
    <CodeNext>125</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>DynamicSceneBuffers.cpp</FileName>
    <ErrorCode>V101</ErrorCode>
    <Message>Implicit assignment type conversion to memsize type.</Message>
    <CodePrev>3620120929</CodePrev>
    <CodeCurrent>4096649644</CodeCurrent>
    <CodeNext>125</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>DynamicSceneBuffers.cpp</FileName>
    <ErrorCode>V101</ErrorCode>
    <Message>Implicit assignment type conversion to memsize type.</Message>
    <CodePrev>1479802082</CodePrev>
    <CodeCurrent>3499959410</CodeCurrent>
    <CodeNext>125</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>DynamicSceneBuffers.cpp</FileName>
    <ErrorCode>V113</ErrorCode>
    <Message>Implicit type conversion from memsize to double type or vice versa.</Message>
    <CodePrev>3775513834</CodePrev>
    <CodeCurrent>1874716927</CodeCurrent>
    <CodeNext>0</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>DynamicSceneBuffers.cpp</FileName>
    <ErrorCode>V101</ErrorCode>
    <Message>Implicit assignment type conversion to memsize type.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>1017585938</CodeCurrent>
    <CodeNext>621083329</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>DynamicSceneBuffers.cpp</FileName>
    <ErrorCode>V101</ErrorCode>
    <Message>Implicit assignment type conversion to memsize type.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>1525872769</CodeCurrent>
    <CodeNext>1092541128</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>DynamicSceneBuffers.cpp</FileName>
    <ErrorCode>V101</ErrorCode>
    <Message>Implicit assignment type conversion to memsize type.</Message>
    <CodePrev>339103873</CodePrev>
    <CodeCurrent>1352475763</CodeCurrent>
    <CodeNext>125</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>DynamicSceneBuffers.cpp</FileName>
    <ErrorCode>V101</ErrorCode>
    <Message>Implicit assignment type conversion to memsize type.</Message>
    <CodePrev>720482433</CodePrev>
    <CodeCurrent>2486036908</CodeCurrent>
    <CodeNext>125</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>GPUPagedAllocator.cpp</FileName>
    <ErrorCode>V106</ErrorCode>
    <Message>Implicit type conversion first argument 'm_free_pages_num' of function 'resize' to memsize type.</Message>
    <CodePrev>3405478890</CodePrev>
    <CodeCurrent>3320565341</CodeCurrent>
    <CodeNext>2866134856</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>GPUPagedAllocator.cpp</FileName>
    <ErrorCode>V108</ErrorCode>
    <Message>Incorrect index type: free_chunk[not a memsize-type]. Use memsize type instead.</Message>
    <CodePrev>2866134856</CodePrev>
    <CodeCurrent>161524229</CodeCurrent>
    <CodeNext>125</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>GPUPagedAllocator.cpp</FileName>
    <ErrorCode>V104</ErrorCode>
    <Message>Implicit conversion of 'npages' to memsize type in an arithmetic expression: new_chunk.size() &gt; npages</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>1733870578</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>GPUPagedAllocator.cpp</FileName>
    <ErrorCode>V104</ErrorCode>
    <Message>Implicit conversion of 'npages' to memsize type in an arithmetic expression: new_chunk.size() - npages</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>3937444031</CodeCurrent>
    <CodeNext>3593740129</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>GPUPagedAllocator.cpp</FileName>
    <ErrorCode>V106</ErrorCode>
    <Message>Implicit type conversion first argument 'npages' of function 'resize' to memsize type.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>1320251869</CodeCurrent>
    <CodeNext>0</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>GPUPagedAllocator.cpp</FileName>
    <ErrorCode>V104</ErrorCode>
    <Message>Implicit conversion of 'npages' to memsize type in an arithmetic expression: new_chunk.size() &lt; npages</Message>
    <CodePrev>125</CodePrev>
    <CodeCurrent>3210265314</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>GPUPagedAllocator.cpp</FileName>
    <ErrorCode>V104</ErrorCode>
    <Message>Implicit conversion of 'npages' to memsize type in an arithmetic expression: new_chunk.size() &lt; npages</Message>
    <CodePrev>123</CodePrev>
    <CodeCurrent>858141372</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>GPUPagedAllocator.cpp</FileName>
    <ErrorCode>V104</ErrorCode>
    <Message>Implicit conversion of 'pages_left' to memsize type in an arithmetic expression: free_chunk.size() &gt; pages_left</Message>
    <CodePrev>2390497207</CodePrev>
    <CodeCurrent>3515638845</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>GPUPagedAllocator.cpp</FileName>
    <ErrorCode>V104</ErrorCode>
    <Message>Implicit conversion of 'pages_left' to memsize type in an arithmetic expression: free_chunk.size() - pages_left</Message>
    <CodePrev>3124908335</CodePrev>
    <CodeCurrent>591361092</CodeCurrent>
    <CodeNext>125</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>GPUPagedAllocator.cpp</FileName>
    <ErrorCode>V104</ErrorCode>
    <Message>Implicit conversion of 'npages' to memsize type in an arithmetic expression: new_chunk.size() != npages</Message>
    <CodePrev>125</CodePrev>
    <CodeCurrent>3467752561</CodeCurrent>
    <CodeNext>2960148809</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>GPUTaskQueue.cpp</FileName>
    <ErrorCode>V2001</ErrorCode>
    <Message>Consider using the extended version of the WaitForSingleObject function here: WaitForSingleObjectEx.</Message>
    <CodePrev>2436513246</CodePrev>
    <CodeCurrent>4174565695</CodeCurrent>
    <CodeNext>1705159005</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>HBAOPass.cpp</FileName>
    <ErrorCode>V112</ErrorCode>
    <Message>Dangerous magic number _ used: ...wInstanced( _, _, _, _ );.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>3930616104</CodeCurrent>
    <CodeNext>125</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>main.cpp</FileName>
    <ErrorCode>V2001</ErrorCode>
    <Message>Consider using the extended version of the MessageBox function here: MessageBoxEx.</Message>
    <CodePrev>123</CodePrev>
    <CodeCurrent>3847981904</CodeCurrent>
    <CodeNext>11235</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>Renderer.cpp</FileName>
    <ErrorCode>V112</ErrorCode>
    <Message>Dangerous magic number _ used: _,...</Message>
    <CodePrev>3173027815</CodePrev>
    <CodeCurrent>5421248</CodeCurrent>
    <CodeNext>2302552658</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>RenderApp.cpp</FileName>
    <ErrorCode>V106</ErrorCode>
    <Message>Implicit type conversion first argument 'mClientWidth' of function 'Resize' to memsize type.</Message>
    <CodePrev>743705</CodePrev>
    <CodeCurrent>3585880350</CodeCurrent>
    <CodeNext>125</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>RenderApp.cpp</FileName>
    <ErrorCode>V106</ErrorCode>
    <Message>Implicit type conversion second argument 'mClientHeight' of function 'Resize' to memsize type.</Message>
    <CodePrev>743705</CodePrev>
    <CodeCurrent>3585880350</CodeCurrent>
    <CodeNext>125</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>RenderApp.cpp</FileName>
    <ErrorCode>V104</ErrorCode>
    <Message>Implicit conversion of 'i' to memsize type in an arithmetic expression: i &lt; ext_scene.materials.size()</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>3088334132</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>RenderApp.cpp</FileName>
    <ErrorCode>V108</ErrorCode>
    <Message>Incorrect index type: ext_scene.materials[not a memsize-type]. Use memsize type instead.</Message>
    <CodePrev>3145612733</CodePrev>
    <CodeCurrent>3675410502</CodeCurrent>
    <CodeNext>1192486268</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>RenderApp.cpp</FileName>
    <ErrorCode>V108</ErrorCode>
    <Message>Incorrect index type: ext_scene.textures[not a memsize-type]. Use memsize type instead.</Message>
    <CodePrev>3675410502</CodePrev>
    <CodeCurrent>1192486268</CodeCurrent>
    <CodeNext>943287878</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>RenderApp.cpp</FileName>
    <ErrorCode>V108</ErrorCode>
    <Message>Incorrect index type: ext_scene.textures[not a memsize-type]. Use memsize type instead.</Message>
    <CodePrev>1192486268</CodePrev>
    <CodeCurrent>943287878</CodeCurrent>
    <CodeNext>774242851</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>RenderApp.cpp</FileName>
    <ErrorCode>V108</ErrorCode>
    <Message>Incorrect index type: ext_scene.textures[not a memsize-type]. Use memsize type instead.</Message>
    <CodePrev>539</CodePrev>
    <CodeCurrent>3755552272</CodeCurrent>
    <CodeNext>0</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>RenderApp.cpp</FileName>
    <ErrorCode>V108</ErrorCode>
    <Message>Incorrect index type: ext_scene.materials[not a memsize-type]. Use memsize type instead.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>3555405769</CodeCurrent>
    <CodeNext>2371830736</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>SceneImporter.cpp</FileName>
    <ErrorCode>V807</ErrorCode>
    <Message>Decreased performance. Consider creating a reference to avoid using the 'res.vertices[out_idx]' expression repeatedly.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>2772458239</CodeCurrent>
    <CodeNext>3540647627</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>TextureStreamer.cpp</FileName>
    <ErrorCode>V2001</ErrorCode>
    <Message>Consider using the extended version of the MapViewOfFile function here: MapViewOfFileEx.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>729096365</CodeCurrent>
    <CodeNext>675898081</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>TextureStreamer.cpp</FileName>
    <ErrorCode>V2001</ErrorCode>
    <Message>Consider using the extended version of the UnmapViewOfFile function here: UnmapViewOfFileEx.</Message>
    <CodePrev>668276121</CodePrev>
    <CodeCurrent>1142999735</CodeCurrent>
    <CodeNext>0</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>SceneManager.cpp</FileName>
    <ErrorCode>V104</ErrorCode>
    <Message>Implicit conversion of 'submesh.DrawArgs().start_index_loc' to memsize type in an arithmetic expression.</Message>
    <CodePrev>123</CodePrev>
    <CodeCurrent>628737402</CodeCurrent>
    <CodeNext>193</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>SceneManager.cpp</FileName>
    <ErrorCode>V104</ErrorCode>
    <Message>Implicit conversion of 'submesh.DrawArgs().idx_cnt' to memsize type in an arithmetic expression: i &lt; submesh.DrawArgs().idx_cnt</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>1045059924</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>MemoryMappedFile.cpp</FileName>
    <ErrorCode>V2001</ErrorCode>
    <Message>Consider using the extended version of the MapViewOfFile function here: MapViewOfFileEx.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>729096365</CodeCurrent>
    <CodeNext>675898081</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>MemoryMappedFile.cpp</FileName>
    <ErrorCode>V2001</ErrorCode>
    <Message>Consider using the extended version of the UnmapViewOfFile function here: UnmapViewOfFileEx.</Message>
    <CodePrev>668276121</CodePrev>
    <CodeCurrent>1142999735</CodeCurrent>
    <CodeNext>0</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>DepthAwareBlurPass.cpp</FileName>
    <ErrorCode>V525</ErrorCode>
    <Message>The code contains the collection of similar blocks. Check items 'D_D__DESCRIPTOR_RANGE_TYPE_SRV', 'D_D__DESCRIPTOR_RANGE_TYPE_SRV', 'D_D__DESCRIPTOR_RANGE_TYPE_UAV' in lines _, _, _.</Message>
    <CodePrev>1535566701</CodePrev>
    <CodeCurrent>2545661681</CodeCurrent>
    <CodeNext>2545657589</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>RenderData.h</FileName>
    <ErrorCode>V730</ErrorCode>
    <Message>Not all members of a class are initialized inside the compiler generated constructor. Consider inspecting: lights, parallel_lights, csm_split_positions.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>25003531</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>ForwardLightingPass.h</FileName>
    <ErrorCode>V525</ErrorCode>
    <Message>The code contains the collection of similar blocks. Check items '_', '_', '_' in lines _, _, _.</Message>
    <CodePrev>1535566701</CodePrev>
    <CodeCurrent>3306278414</CodeCurrent>
    <CodeNext>3148278534</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>ForwardCBProvider.cpp</FileName>
    <ErrorCode>V2007</ErrorCode>
    <Message>The '_ * i' expression can be simplified. One of the operands in the '*' operation equals _. Probably it is a mistake.</Message>
    <CodePrev>666124016</CodePrev>
    <CodeCurrent>508691043</CodeCurrent>
    <CodeNext>125</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>ForwardCBProvider.cpp</FileName>
    <ErrorCode>V1008</ErrorCode>
    <Message>Consider inspecting the 'for' operator. No more than one iteration of the loop will be performed.</Message>
    <CodePrev>3542504141</CodePrev>
    <CodeCurrent>666124016</CodeCurrent>
    <CodeNext>508691043</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>RenderData.h</FileName>
    <ErrorCode>V730</ErrorCode>
    <Message>Not all members of a class are initialized inside the compiler generated constructor. Consider inspecting: lights, parallel_lights, csm_split_positions.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>4110247424</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>Renderer.cpp</FileName>
    <ErrorCode>V730</ErrorCode>
    <Message>Not all members of a class are initialized inside the constructor. Consider inspecting: m_screen_viewport, m_scissor_rect.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>698526270</CodeCurrent>
    <CodeNext>3611432588</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>SceneItems.h</FileName>
    <ErrorCode>V730</ErrorCode>
    <Message>Not all members of a class are initialized inside the compiler generated constructor. Consider inspecting: sm_size, orthogonal_ws_height, ws_halfwidth.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>195409</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>SceneItems.h</FileName>
    <ErrorCode>V730</ErrorCode>
    <Message>Not all members of a class are initialized inside the compiler generated constructor. Consider inspecting: sm_size, orthogonal_ws_height.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>195409</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>Renderer.cpp</FileName>
    <ErrorCode>V1020</ErrorCode>
    <Message>The function exited without calling the 'upload.End' function. Check lines: _, _.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>958756</CodeCurrent>
    <CodeNext>86499344</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>Renderer.cpp</FileName>
    <ErrorCode>V807</ErrorCode>
    <Message>Decreased performance. Consider creating a reference to avoid using the 'GetScene().GetROScene()' expression repeatedly.</Message>
    <CodePrev>239911323</CodePrev>
    <CodeCurrent>3401720475</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>SceneItems.h</FileName>
    <ErrorCode>V730</ErrorCode>
    <Message>Not all members of a class are initialized inside the compiler generated constructor. Consider inspecting: m_data.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>72777</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>CubemapManager.cpp</FileName>
    <ErrorCode>V807</ErrorCode>
    <Message>Decreased performance. Consider creating a reference to avoid using the 'i-&gt;cubemap' expression repeatedly.</Message>
    <CodePrev>123</CodePrev>
    <CodeCurrent>737704107</CodeCurrent>
    <CodeNext>4046215760</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>OldRenderer.cpp</FileName>
    <ErrorCode>V1020</ErrorCode>
    <Message>The function exited without calling the 'upload.End' function. Check lines: _, _.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>958756</CodeCurrent>
    <CodeNext>86499344</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>OldRenderer.cpp</FileName>
    <ErrorCode>V807</ErrorCode>
    <Message>Decreased performance. Consider creating a reference to avoid using the 'lists_to_execute.back()' expression repeatedly.</Message>
    <CodePrev>163985478</CodePrev>
    <CodeCurrent>1054289726</CodeCurrent>
    <CodeNext>0</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>OldRenderer.cpp</FileName>
    <ErrorCode>V821</ErrorCode>
    <Message>Decreased performance. The 'desc_table' variable can be constructed in a lower level scope.</Message>
    <CodePrev>123</CodePrev>
    <CodeCurrent>239911323</CodeCurrent>
    <CodeNext>1888375007</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>OldRenderer.cpp</FileName>
    <ErrorCode>V730</ErrorCode>
    <Message>Not all members of a class are initialized inside the constructor. Consider inspecting: m_screen_viewport, m_scissor_rect.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>696119622</CodeCurrent>
    <CodeNext>3611432588</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>CommandListPool.cpp</FileName>
    <ErrorCode>V2006</ErrorCode>
    <Message>Implicit type conversion from enum type to integer type.</Message>
    <CodePrev>123</CodePrev>
    <CodeCurrent>633518789</CodeCurrent>
    <CodeNext>0</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>CommandListPool.cpp</FileName>
    <ErrorCode>V2006</ErrorCode>
    <Message>Implicit type conversion from enum type to integer type.</Message>
    <CodePrev>123</CodePrev>
    <CodeCurrent>3327826093</CodeCurrent>
    <CodeNext>125</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>SceneRenderer.cpp</FileName>
    <ErrorCode>V2006</ErrorCode>
    <Message>Implicit type conversion from enum type to integer type.</Message>
    <CodePrev>2835830609</CodePrev>
    <CodeCurrent>335803541</CodeCurrent>
    <CodeNext>23426475</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>RenderData.h</FileName>
    <ErrorCode>V730</ErrorCode>
    <Message>Not all members of a class are initialized inside the compiler generated constructor. Consider inspecting: lights, parallel_lights, csm_split_positions.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>2817222228</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>RenderTask.cpp</FileName>
    <ErrorCode>V813</ErrorCode>
    <Message>Decreased performance. The 'batches' argument should probably be rendered as a constant reference.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>314646164</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>RenderTask.cpp</FileName>
    <ErrorCode>V813</ErrorCode>
    <Message>Decreased performance. The 'batches' argument should probably be rendered as a constant reference.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>1943147982</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>RenderTask.cpp</FileName>
    <ErrorCode>V730</ErrorCode>
    <Message>Not all members of a class are initialized inside the constructor. Consider inspecting: m_main_frustrum, m_mode, m_main_camera.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>1714940875</CodeCurrent>
    <CodeNext>2966823578</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>SceneImporter.cpp</FileName>
    <ErrorCode>V807</ErrorCode>
    <Message>Decreased performance. Consider creating a reference to avoid using the same expression repeatedly.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>1793121223</CodeCurrent>
    <CodeNext>3928021958</CodeNext>
  </snow_engine>
  <snow_engine>
    <FileName>Components.h</FileName>
    <ErrorCode>V730</ErrorCode>
    <Message>Not all members of a class are initialized inside the compiler generated constructor. Consider inspecting: m_data.</Message>
    <CodePrev>0</CodePrev>
    <CodeCurrent>72777</CodeCurrent>
    <CodeNext>123</CodeNext>
  </snow_engine>
</NewDataSet>